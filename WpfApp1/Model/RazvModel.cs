using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static WpfApp1.Model.RazvKonstrT15K67;

namespace WpfApp1.Model
{
    public abstract class RazvModel : OperModelBase
    {
        
    }
    public class RazvChugР6М58 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.20, 0.20, 0.25, 0.25, 0.30, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 5
            new double[] {0.20, 0.23, 0.25, 0.30, 0.30, 0.35, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 8
            new double[] {0.20, 0.23, 0.25, 0.30, 0.30, 0.40, 0.45, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
            new double[] {0.25, 0.30, 0.35, 0.35, 0.40, 0.50, 0.60, 0.70, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.30, 0.35, 0.40, 0.45, 0.55, 0.65, 0.80, 0.95, 1.10, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.30, 0.40, 0.45, 0.50, 0.60, 0.70, 0.85, 1.10, 1.20, 1.40, 0.00, 0.00, 0.00, 0.00}, // d = 25
            new double[] {0.00, 0.45, 0.50, 0.60, 0.70, 0.85, 1.05, 1.30, 1.50, 1.70, 1.90, 0.00, 0.00, 0.00}, // d = 30
            new double[] {0.00, 0.50, 0.60, 0.70, 0.80, 0.95, 1.20, 1.40, 1.70, 1.90, 2.20, 2.40, 0.00, 0.00}, // d = 35
            new double[] {0.00, 0.00, 0.70, 0.85, 0.95, 1.10, 1.45, 1.80, 2.00, 2.30, 2.60, 2.90, 3.20, 3.80}, // d = 40
            new double[] {0.00, 0.00, 0.85, 1.00, 1.15, 1.40, 1.75, 2.10, 2.50, 2.90, 3.20, 3.60, 3.90, 4.60}, // d = 50
            new double[] {0.00, 0.00, 0.00, 1.10, 1.30, 1.60, 1.90, 2.40, 2.80, 3.20, 3.60, 4.00, 4.40, 5.00}, // d = 60
            new double[] {0.00, 0.00, 0.00, 1.20, 1.40, 1.60, 2.10, 2.60, 3.00, 3.40, 3.90, 4.30, 4.70, 5.50}, // d = 70
            new double[] {0.00, 0.00, 0.00, 1.40, 1.60, 2.00, 2.50, 3.00, 3.50, 4.10, 4.60, 5.10, 5.50, 6.50}, // d = 80

        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 5, 8, 10, 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public RazvChugР6М58(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class RazvChugР6М57 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.25, 0.30, 0.40, 0.45, 0.55, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 5
            new double[] {0.30, 0.37, 0.45, 0.55, 0.65, 0.85, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 8
            new double[] {0.30, 0.37, 0.45, 0.55, 0.65, 0.90, 1.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
            new double[] {0.35, 0.40, 0.65, 0.65, 0.80, 1.00, 1.20, 1.50, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.45, 0.60, 0.70, 0.85, 0.95, 1.15, 1.50, 1.85, 2.20, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.50, 0.60, 0.75, 0.90, 1.10, 1.30, 1.75, 2.20, 2.50, 2.90, 0.00, 0.00, 0.00, 0.00}, // d = 25
            new double[] {0.00, 0.65, 0.80, 1.00, 1.20, 1.45, 1.85, 2.30, 2.70, 3.20, 3.60, 0.00, 0.00, 0.00}, // d = 30
            new double[] {0.00, 0.80, 1.00, 1.20, 1.40, 1.75, 2.10, 2.80, 3.30, 3.60, 4.30, 4.60, 0.00, 0.00}, // d = 35
            new double[] {0.00, 0.00, 1.10, 1.25, 1.55, 1.90, 2.35, 3.00, 3.50, 4.20, 4.40, 5.10, 5.30, 6.70}, // d = 40
            new double[] {0.00, 0.00, 1.25, 1.50, 1.85, 2.20, 2.75, 3.40, 3.60, 4.60, 5.30, 5.90, 6.10, 7.40}, // d = 50
            new double[] {0.00, 0.00, 0.00, 1.40, 1.90, 2.30, 3.30, 3.60, 4.20, 4.80, 5.40, 6.00, 6.60, 8.00}, // d = 60
            new double[] {0.00, 0.00, 0.00, 1.50, 1.90, 2.40, 3.40, 3.90, 4.50, 5.10, 5.60, 6.30, 6.90, 8.50}, // d = 70
            new double[] {0.00, 0.00, 0.00, 1.70, 2.00, 2.50, 3.50, 4.00, 4.50, 5.40, 5.90, 6.40, 7.50, 8.50}, // d = 80
        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 5, 8, 10, 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public RazvChugР6М57(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class RazvChugBK68 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.14, 0.14, 0.15, 0.15, 0.16, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 5
            new double[] {0.14, 0.14, 0.15, 0.16, 0.16, 0.17, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 8
            new double[] {0.15, 0.16, 0.17, 0.17, 0.18, 0.21, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
            new double[] {0.16, 0.16, 0.17, 0.18, 0.19, 0.22, 0.26, 0.27, 0.30, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.16, 0.17, 0.18, 0.19, 0.20, 0.23, 0.27, 0.29, 0.32, 0.35, 0.37, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.17, 0.18, 0.19, 0.20, 0.21, 0.25, 0.29, 0.34, 0.35, 0.38, 0.42, 0.45, 0.48, 0.00}, // d = 25
            new double[] {0.18, 0.19, 0.20, 0.21, 0.23, 0.28, 0.32, 0.36, 0.40, 0.44, 0.48, 0.52, 0.56, 0.64}, // d = 30
            new double[] {0.19, 0.20, 0.22, 0.23, 0.25, 0.30, 0.34, 0.38, 0.42, 0.46, 0.51, 0.55, 0.60, 0.68}, // d = 35
            new double[] {0.00, 0.00, 0.23, 0.25, 0.27, 0.33, 0.40, 0.43, 0.49, 0.54, 0.60, 0.65, 0.70, 0.80}, // d = 40
            new double[] {0.00, 0.00, 0.29, 0.31, 0.33, 0.39, 0.43, 0.51, 0.58, 0.64, 0.70, 0.75, 0.81, 0.93}, // d = 50
            new double[] {0.00, 0.00, 0.00, 0.32, 0.34, 0.40, 0.45, 0.54, 0.60, 0.66, 0.72, 0.78, 0.84, 1.00}, // d = 60
            new double[] {0.00, 0.00, 0.00, 0.32, 0.35, 0.41, 0.46, 0.56, 0.62, 0.69, 0.75, 0.81, 0.87, 1.02}, // d = 70
            new double[] {0.00, 0.00, 0.00, 0.33, 0.36, 0.43, 0.48, 0.58, 0.65, 0.72, 0.79, 0.86, 0.92, 1.05}, // d = 80
        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 5, 8, 10, 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public RazvChugBK68(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class RazvChugBK67 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.16, 0.16, 0.17, 0.19, 0.22, 0.24, 0.26, 0.32, 0.38, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.16, 0.17, 0.19, 0.20, 0.21, 0.27, 0.31, 0.37, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.19, 0.19, 0.21, 0.22, 0.23, 0.25, 0.34, 0.40, 0.45, 0.49, 0.53, 0.57, 0.62, 0.00}, // d = 25
            new double[] {0.25, 0.26, 0.28, 0.31, 0.33, 0.37, 0.52, 0.56, 0.63, 0.70, 0.76, 0.83, 0.89, 0.95}, // d = 30
            new double[] {0.00, 0.00, 0.31, 0.33, 0.35, 0.46, 0.51, 0.71, 0.78, 0.86, 0.94, 1.01, 1.09, 1.17}, // d = 40
            new double[] {0.00, 0.00, 0.40, 0.44, 0.48, 0.62, 0.70, 0.77, 0.86, 0.93, 1.04, 1.35, 1.46, 1.57}, // d = 50
            new double[] {0.00, 0.00, 0.00, 0.51, 0.55, 0.66, 0.75, 0.83, 0.92, 1.08, 1.08, 1.42, 1.66, 1.81}, // d = 60
            new double[] {0.00, 0.00, 0.00, 0.53, 0.58, 0.70, 0.80, 0.88, 0.98, 1.08, 1.10, 1.55, 1.77, 1.98}, // d = 70
            new double[] {0.00, 0.00, 0.00, 0.61, 0.65, 0.80, 0.90, 1.00, 1.11, 1.22, 1.33, 1.64, 1.87, 2.02}, // d = 80
        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public RazvChugBK67(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class RazvKonstrР6М58 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.21, 0.22, 0.25, 0.27, 0.30, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  5
            new double[] {0.21, 0.23, 0.28, 0.32, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  6
            new double[] {0.22, 0.26, 0.31, 0.35, 0.40, 0.47, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  8
            new double[] {0.24, 0.30, 0.34, 0.40, 0.95, 0.55, 0.70, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
            new double[] {0.30, 0.35, 0.42, 0.47, 0.55, 0.65, 0.80, 1.05, 1.20, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.35, 0.42, 0.50, 0.57, 0.65, 0.80, 1.00, 1.20, 1.40, 1.60, 0.00, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.42, 0.52, 0.59, 0.73, 0.85, 1.02, 1.25, 1.55, 1.85, 2.10, 2.30, 0.00, 0.00, 0.00}, // d = 25
            new double[] {0.00, 0.65, 0.83, 0.97, 1.15, 1.40, 1.75, 2.10, 2.25, 2.80, 3.30, 0.00, 0.00, 0.00}, // d = 30
            new double[] {0.00, 0.00, 1.05, 1.30, 1.50, 1.70, 2.20, 2.70, 3.10, 3.60, 4.00, 4.50, 4.90, 0.00}, // d = 40
            new double[] {0.00, 0.00, 1.15, 1.30, 1.55, 1.90, 2.40, 2.90, 3.50, 3.90, 4.40, 4.80, 5.50, 0.00}, // d = 50
            new double[] {0.00, 0.00, 0.00, 1.45, 1.65, 1.80, 2.60, 3.10, 3.60, 4.20, 4.70, 5.00, 6.50, 7.00}, // d = 60
            new double[] {0.00, 0.00, 0.00, 1.60, 1.80, 2.20, 2.80, 3.40, 3.90, 4.50, 5.10, 5.50, 6.50, 7.50}, // d = 70
            new double[] {0.00, 0.00, 0.00, 1.80, 2.00, 2.50, 3.20, 3.80, 4.40, 5.00, 6.00, 6.50, 7.00, 8.50}, // d = 80

        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 5, 6, 8, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public RazvKonstrР6М58(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class RazvKonstrР6М57 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.60, 0.85, 1.08, 1.23, 1.35, 1.60, 2.50, 2.85, 3.50, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.76, 0.94, 1.30, 1.54, 1.75, 2.18, 2.80, 3.20, 3.93, 4.45, 0.00, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.88, 1.08, 1.37, 1.67, 1.85, 2.38, 3.05, 3.90, 4.65, 5.20, 5.70, 0.00, 0.00, 0.00}, // d = 25
            new double[] {0.00, 1.15, 1.37, 1.63, 1.95, 2.40, 3.15, 3.90, 4.65, 5.40, 6.20, 0.00, 0.00, 0.00}, // d = 30
            new double[] {0.00, 0.00, 1.95, 2.30, 2.60, 3.40, 4.30, 5.10, 5.90, 6.90, 7.50, 8.00, 9.00, 0.00}, // d = 40
            new double[] {0.00, 0.00, 1.95, 2.30, 2.65, 3.60, 4.10, 5.30, 6.10, 7.10, 8.10, 8.70, 9.50, 0.00}, // d = 50
            new double[] {0.00, 0.00, 0.00, 2.50, 2.95, 3.70, 4.90, 5.40, 6.60, 7.40, 8.80, 10.0, 11.5, 13.0}, // d = 60
            new double[] {0.00, 0.00, 0.00, 2.50, 3.00, 3.80, 4.70, 5.60, 6.90, 8.00, 8.90, 10.0, 11.0, 13.5}, // d = 70
            new double[] {0.00, 0.00, 0.00, 2.90, 3.40, 4.00, 5.30, 6.70, 7.60, 9.00, 10.0, 11.0, 12.5, 14.5}, // d = 80
        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public RazvKonstrР6М57(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class RazvKonstrT15K68 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.20, 0.22, 0.26, 0.31, 0.35, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 4
            new double[] {0.21, 0.25, 0.27, 0.32, 0.36, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 6
            new double[] {0.22, 0.25, 0.29, 0.33, 0.38, 0.43, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 8
            new double[] {0.24, 0.37, 0.32, 0.37, 0.42, 0.54, 0.68, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
            new double[] {0.32, 0.33, 0.41, 0.47, 0.54, 0.69, 0.85, 1.00, 1.16, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.37, 0.40, 0.47, 0.54, 0.62, 0.79, 0.97, 1.15, 1.33, 1.51, 0.00, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.43, 0.47, 0.56, 0.64, 0.73, 0.95, 1.16, 1.39, 1.60, 1.82, 2.04, 0.00, 0.00, 0.00}, // d = 25
            new double[] {0.00, 0.52, 0.62, 0.72, 0.81, 1.06, 1.37, 1.62, 1.85, 2.10, 2.34, 0.00, 0.00, 0.00}, // d = 30
            new double[] {0.00, 0.00, 0.77, 0.88, 1.00, 1.26, 1.54, 1.81, 2.08, 2.30, 2.63, 2.90, 3.18, 0.00}, // d = 40
            new double[] {0.00, 0.00, 0.92, 1.05, 1.20, 1.54, 1.72, 2.22, 2.56, 2.90, 3.24, 3.58, 3.92, 0.00}, // d = 50
            new double[] {0.00, 0.00, 0.00, 1.12, 1.25, 1.60, 1.92, 2.28, 2.78, 3.10, 3.50, 3.87, 4.23, 4.96}, // d = 60
            new double[] {0.00, 0.00, 0.00, 1.25, 1.40, 1.79, 2.18, 2.57, 2.96, 3.35, 3.74, 4.13, 4.52, 5.29}, // d = 70
            new double[] {0.00, 0.00, 0.00, 1.32, 1.50, 1.91, 2.33, 2.75, 3.17, 3.59, 4.00, 4.43, 4.85, 5.68}, // d = 80
        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 4, 6, 8, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public RazvKonstrT15K68(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class RazvKonstrT15K67 : RazvModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.42, 0.47, 0.56, 0.66, 0.75, 1.08, 1.23, 1.56, 1.71, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
            new double[] {0.49, 0.55, 0.65, 0.76, 0.87, 1.14, 1.42, 1.69, 1.96, 2.23, 0.00, 0.00, 0.00, 0.00}, // d = 20
            new double[] {0.54, 0.60, 0.72, 0.85, 0.97, 1.27, 1.57, 1.87, 2.18, 2.48, 2.78, 0.00, 0.00, 0.00}, // d = 25
            new double[] {0.00, 0.74, 0.89, 1.03, 1.18, 1.54, 1.75, 2.27, 2.63, 3.00, 3.36, 0.00, 0.00, 0.00}, // d = 30
            new double[] {0.00, 0.00, 1.02, 1.17, 1.33, 1.72, 1.93, 2.49, 2.88, 3.27, 3.66, 4.05, 4.44, 0.00}, // d = 40
            new double[] {0.00, 0.00, 1.13, 1.31, 1.48, 1.92, 2.35, 2.79, 3.22, 3.66, 4.10, 4.53, 4.97, 0.00}, // d = 50
            new double[] {0.00, 0.00, 0.00, 1.50, 1.70, 2.18, 2.67, 3.16, 3.64, 4.13, 4.62, 5.10, 5.60, 6.56}, // d = 60
            new double[] {0.00, 0.00, 0.00, 1.58, 1.78, 2.30, 2.81, 3.32, 3.84, 4.35, 4.87, 5.38, 5.89, 6.92}, // d = 70
            new double[] {0.00, 0.00, 0.00, 1.66, 1.87, 2.42, 2.96, 3.51, 4.05, 4.60, 5.14, 5.69, 6.23, 7.32}, // d = 80
        };
        protected override double[] GlubSpis { get; set; } = new double[] { 15, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public RazvKonstrT15K67(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
        public class RazvKorrozР6М58 : RazvModel
        {
            protected override double[][] VremOper { get; set; } = new double[][]
            {
                new double[] {0.59, 0.73, 0.87, 1.00, 1.15, 1.35, 1.65, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  5
                new double[] {0.75, 0.94, 1.15, 1.30, 1.50, 1.75, 2.15, 2.50, 3.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  8
                new double[] {0.93, 1.15, 1.40, 1.65, 1.80, 2.25, 2.70, 3.20, 3.90, 4.80, 6.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
                new double[] {1.40, 1.65, 1.95, 2.25, 2.50, 2.90, 3.50, 4.00, 4.90, 6.00, 7.50, 9.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
                new double[] {1.65, 1.95, 2.25, 2.50, 2.85, 3.25, 3.85, 4.75, 5.50, 6.50, 8.00, 10.0, 11.5, 0.00, 0.00, 0.00, 0.00}, // d = 20
                new double[] {1.90, 2.25, 2.60, 2.95, 3.25, 3.75, 4.45, 5.00, 6.00, 7.50, 9.50, 11.0, 13.0, 15.0, 0.00, 0.00, 0.00}, // d = 25
                new double[] {0.00, 2.30, 2.65, 3.00, 3.35, 3.85, 4.60, 5.50, 6.50, 7.50, 9.50, 11.5, 13.5, 15.5, 17.5, 0.00, 0.00}, // d = 30
                new double[] {0.00, 2.85, 3.20, 3.55, 3.95, 4.50, 5.00, 6.00, 7.00, 8.50, 10.5, 12.5, 14.5, 16.5, 18.5, 20.5, 0.00}, // d = 35
                new double[] {0.00, 0.00, 3.65, 4.00, 4.45, 5.00, 6.00, 6.50, 8.00, 9.50, 12.0, 14.5, 16.7, 19.0, 21.0, 23.0, 26.0}, // d = 40
                new double[] {0.00, 0.00, 4.20, 4.70, 5.00, 6.00, 7.00, 8.00, 9.00, 11.0, 14.0, 16.5, 19.0, 20.5, 24.0, 27.0, 32.0}, // d = 50
                new double[] {0.00, 0.00, 0.00, 5.00, 5.50, 6.50, 7.50, 8.50, 10.0, 12.0, 15.5, 18.0, 21.5, 24.0, 26.0, 29.0, 35.0}, // d = 60
                new double[] {0.00, 0.00, 0.00, 5.50, 6.00, 7.00, 8.00, 9.50, 11.0, 13.5, 17.7, 20.0, 23.0, 26.0, 29.0, 32.0, 38.0}, // d = 70
                new double[] {0.00, 0.00, 0.00, 7.00, 7.50, 8.50, 10.0, 11.5, 13.5, 16.0, 20.5, 24.0, 28.0, 32.0, 36.0, 39.0, 46.0}, // d = 80
            };
            protected override double[] GlubSpis { get; set; } = new double[] {10, 15, 20, 25, 30, 40, 50, 60, 80, 100, 125, 150, 175, 200, 225, 250, 300 };
            protected override double[] DiamSpis { get; set; } = new double[] { 5, 8, 10, 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
            public RazvKorrozР6М58(double diam, double glub)
            {
                Diam = diam;
                Glub = glub;
            }
        }
        public class RazvKorrozР6М57 : RazvModel
        {
            protected override double[][] VremOper { get; set; } = new double[][]
            {
                new double[] {0.80, 0.97, 1.15, 1.30, 1.40, 1.70, 2.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  5
                new double[] {1.05, 1.30, 1.58, 1.75, 2.00, 2.35, 2.80, 3.30, 4.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  8
                new double[] {1.10, 1.40, 1.65, 1.90, 2.15, 2.55, 3.00, 3.55, 4.30, 5.50, 7.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
                new double[] {1.50, 1.80, 2.10, 2.40, 2.65, 3.00, 3.65, 4.20, 5.00, 6.00, 8.00, 9.50, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
                new double[] {2.00, 2.45, 2.80, 3.15, 3.50, 4.00, 4.70, 5.50, 6.50, 8.00,10.00,12.00,14.00, 0.00, 0.00, 0.00, 0.00}, // d = 20
                new double[] {2.30, 2.65, 3.00, 3.40, 3.80, 4.35, 5.00, 6.00, 7.00, 8.50,11.00,13.00,15.00,17.00, 0.00, 0.00, 0.00}, // d = 25
                new double[] {0.00, 2.90, 3.30, 3.75, 4.15, 4.80, 5.50, 6.50, 7.50, 9.50,12.00,14.50,16.50,18.50,21.00,23.00, 0.00}, // d = 30
                new double[] {0.00, 3.80, 4.30, 4.80, 5.50, 6.00, 7.00, 8.00, 9.50,11.50,14.00,17.00,19.50,22.00,25.00,27.00, 0.00}, // d = 35
                new double[] {0.00, 0.00, 4.75, 5.00, 6.00, 6.50, 7.50, 8.50,10.00,12.50,16.00,19.00,21.50,24.00,27.50,29.50, 0.00}, // d = 40
                new double[] {0.00, 0.00, 6.00, 6.50, 7.00, 8.00, 9.50,10.50,12.50,15.50,19.50,23.00,26.50,30.50,34.00,37.00,43.00}, // d = 50
                new double[] {0.00, 0.00, 0.00, 8.00, 8.50,10.00,11.50,13.00,15.50,18.50,23.50,28.00,32.00,36.00,40.00,44.00,53.00}, // d = 60
                new double[] {0.00, 0.00, 0.00, 8.20, 9.00,10.00,12.00,13.50,16.00,19.00,25.00,28.50,33.00,37.00,41.00,46.00,54.00}, // d = 70
                new double[] {0.00, 0.00, 0.00,10.00,11.00,12.50,14.50,16.00,19.00,23.00,29.00,35.00,40.00,45.00,51.00,56.00,66.00}, // d = 80
            };
            protected override double[] GlubSpis { get; set; } = new double[] { 10, 15, 20, 25, 30, 40, 50, 60, 80, 100, 125, 150, 175, 200, 225, 250, 300 };
            protected override double[] DiamSpis { get; set; } = new double[] { 5, 8, 10, 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
            public RazvKorrozР6М57(double diam, double glub)
            {
                Diam = diam;
                Glub = glub;
            }
        }
        public class RazvAllumР6М58 : RazvModel
        {
            protected override double[][] VremOper { get; set; } = new double[][]
            {
                new double[] {0.12, 0.13, 0.14, 0.18, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  5
                new double[] {0.13, 0.14, 0.15, 0.19, 0.19, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  6
                new double[] {0.13, 0.14, 0.16, 0.20, 0.22, 0.26, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  8
                new double[] {0.14, 0.15, 0.17, 0.22, 0.23, 0.28, 0.33, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
                new double[] {0.16, 0.18, 0.20, 0.25, 0.33, 0.40, 0.48, 0.58, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
                new double[] {0.19, 0.22, 0.25, 0.27, 0.30, 0.46, 0.54, 0.66, 0.74, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 20
                new double[] {0.22, 0.25, 0.30, 0.34, 0.38, 0.46, 0.66, 0.79, 0.90, 1.02, 0.00, 0.00, 0.00, 0.00}, // d = 25
                new double[] {0.26, 0.30, 0.35, 0.41, 0.46, 0.55, 0.85, 0.96, 1.10, 1.23, 1.37, 0.00, 0.00, 0.00}, // d = 30
                new double[] {0.31, 0.36, 0.42, 0.50, 0.56, 0.70, 0.88, 1.04, 1.20, 1.36, 1.52, 1.68, 0.00, 0.00}, // d = 35
                new double[] {0.41, 0.42, 0.50, 0.54, 0.60, 0.78, 0.91, 1.40, 1.59, 1.78, 1.98, 2.17, 2.36, 2.55}, // d = 40
                new double[] {0.42, 0.48, 0.58, 0.66, 0.75, 0.92, 1.12, 1.40, 1.60, 1.80, 2.04, 2.24, 2.48, 2.92}, // d = 50
                new double[] {0.48, 0.55, 0.65, 0.75, 0.84, 1.04, 1.28, 1.56, 1.84, 2.10, 2.32, 2.60, 2.84, 3.36}, // d = 60
                new double[] {0.50, 0.58, 0.68, 0.79, 0.88, 1.08, 1.36, 1.64, 1.92, 2.20, 2.44, 2.72, 3.00, 3.52}, // d = 70
                new double[] {0.52, 0.60, 0.71, 0.84, 0.96, 1.16, 1.44, 1.76, 2.00, 2.32, 2.60, 2.88, 3.16, 3.72}, // d = 80
            };
            protected override double[] GlubSpis { get; set; } = new double[] { 10, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
            protected override double[] DiamSpis { get; set; } = new double[] { 5, 6, 8, 10, 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
            public RazvAllumР6М58(double diam, double glub)
            {
                Diam = diam;
                Glub = glub;
            }
        }
        public class RazvAllumР6М57 : RazvModel
        {
            protected override double[][] VremOper { get; set; } = new double[][]
            {
                new double[] {0.28, 0.34, 0.42, 0.50, 0.58, 0.73, 0.94, 1.12, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
                new double[] {0.35, 0.42, 0.53, 0.63, 0.72, 0.92, 1.16, 1.39, 1.62, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 20
                new double[] {0.41, 0.50, 0.62, 0.74, 0.86, 1.05, 1.34, 1.64, 1.92, 2.20, 0.00, 0.00, 0.00, 0.00}, // d = 25
                new double[] {0.48, 0.59, 0.73, 0.87, 1.02, 1.30, 1.67, 2.00, 2.36, 2.72, 3.12, 0.00, 0.00, 0.00}, // d = 30
                new double[] {0.54, 0.67, 0.82, 0.98, 1.18, 1.40, 1.80, 2.12, 2.40, 3.00, 3.16, 3.34, 0.00, 0.00}, // d = 35
                new double[] {0.61, 0.72, 0.86, 1.02, 1.20, 1.46, 1.84, 2.24, 2.64, 3.00, 3.28, 3.80, 3.92, 4.98}, // d = 40
                new double[] {0.74, 0.84, 1.02, 1.22, 1.40, 1.72, 2.20, 2.60, 3.20, 3.40, 3.96, 4.32, 4.72, 5.88}, // d = 50
                new double[] {0.80, 0.93, 1.16, 1.33, 1.56, 1.88, 2.40, 2.84, 3.28, 3.80, 4.36, 5.00, 5.16, 6.24}, // d = 60
                new double[] {0.82, 0.94, 1.16, 1.36, 1.56, 1.92, 2.40, 3.16, 3.36, 3.92, 4.48, 5.28, 5.40, 6.48}, // d = 70
                new double[] {0.88, 1.04, 1.29, 1.48, 1.68, 2.04, 2.56, 3.44, 4.00, 4.48, 5.00, 5.52, 6.28, 7.10}, // d = 80
            };
            protected override double[] GlubSpis { get; set; } = new double[] { 10, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
            protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
            public RazvAllumР6М57(double diam, double glub)
            {
                Diam = diam;
                Glub = glub;
            }
        }
        public class RazvMedР6М58 : RazvModel
        {
            protected override double[][] VremOper { get; set; } = new double[][]
            {
                new double[] {0.15, 0.16, 0.18, 0.19, 0.20, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  5
                new double[] {0.16, 0.17, 0.19, 0.20, 0.22, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  6
                new double[] {0.16, 0.18, 0.21, 0.22, 0.24, 0.29, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d =  8
                new double[] {0.17, 0.19, 0.21, 0.24, 0.26, 0.32, 0.38, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 10
                new double[] {0.20, 0.22, 0.25, 0.28, 0.32, 0.39, 0.47, 0.55, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
                new double[] {0.24, 0.27, 0.31, 0.36, 0.40, 0.50, 0.60, 0.71, 0.82, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 20
                new double[] {0.27, 0.31, 0.37, 0.42, 0.48, 0.59, 0.73, 0.86, 1.00, 1.10, 0.00, 0.00, 0.00, 0.00}, // d = 25
                new double[] {0.32, 0.37, 0.44, 0.51, 0.58, 0.73, 0.91, 1.10, 1.25, 1.45, 1.60, 0.00, 0.00, 0.00}, // d = 30
                new double[] {0.39, 0.45, 0.53, 0.62, 0.70, 0.87, 1.10, 1.30, 1.50, 1.70, 1.90, 2.10, 0.00, 0.00}, // d = 35
                new double[] {0.45, 0.52, 0.62, 0.72, 0.82, 1.00, 1.25, 1.50, 1.75, 2.00, 2.25, 2.50, 2.75, 3.25}, // d = 40
                new double[] {0.53, 0.60, 0.72, 0.83, 0.94, 1.15, 1.40, 1.75, 2.00, 2.25, 2.55, 2.80, 3.10, 3.65}, // d = 50
                new double[] {0.60, 0.69, 0.80, 0.94, 1.05, 1.30, 1.60, 1.95, 2.30, 2.60, 2.90, 3.25, 3.55, 4.20}, // d = 60
                new double[] {0.62, 0.72, 0.85, 0.99, 1.10, 1.35, 1.70, 2.05, 2.40, 2.75, 3.05, 3.40, 3.75, 4.40}, // d = 70
                new double[] {0.65, 0.75, 0.89, 1.05, 1.20, 1.45, 1.80, 2.20, 2.50, 2.90, 3.25, 3.60, 3.95, 4.65}, // d = 80

            };
            protected override double[] GlubSpis { get; set; } = new double[] { 10, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
            protected override double[] DiamSpis { get; set; } = new double[] { 5, 6, 8, 10, 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
            public RazvMedР6М58(double diam, double glub)
            {
                Diam = diam;
                Glub = glub;
            }
        }
        public class RazvMedР6М57 : RazvModel
        {
            protected override double[][] VremOper { get; set; } = new double[][]
            {
                new double[] {0.35, 0.43, 0.53, 0.63, 0.73, 0.91, 1.18, 1.12, 1.40, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 15
                new double[] {0.44, 0.53, 0.66, 0.79, 0.90, 1.15, 1.45, 1.74, 2.03, 0.00, 0.00, 0.00, 0.00, 0.00}, // d = 20
                new double[] {0.51, 0.62, 0.78, 0.93, 1.07, 1.31, 1.67, 2.04, 2.40, 2.75, 0.00, 0.00, 0.00, 0.00}, // d = 25
                new double[] {0.60, 0.74, 0.91, 1.09, 1.27, 1.62, 2.09, 2.50, 2.95, 3.40, 3.90, 0.00, 0.00, 0.00}, // d = 30
                new double[] {0.67, 0.84, 1.03, 1.22, 1.47, 1.75, 2.25, 2.65, 3.00, 3.75, 4.10, 4.70, 0.00, 0.00}, // d = 35
                new double[] {0.76, 0.90, 1.07, 1.28, 1.50, 1.83, 2.30, 2.80, 3.30, 4.00, 4.25, 5.00, 5.25, 6.22}, // d = 40
                new double[] {0.92, 1.09, 1.28, 1.52, 1.76, 2.15, 2.75, 3.25, 4.00, 4.25, 4.95, 5.70, 5.90, 7.35}, // d = 50
                new double[] {1.00, 1.16, 1.45, 1.66, 1.95, 2.35, 3.00, 3.55, 4.10, 4.75, 5.45, 6.25, 6.45, 7.80}, // d = 60
                new double[] {1.03, 1.18, 1.45, 1.70, 1.95, 2.40, 3.00, 3.95, 4.20, 4.90, 5.60, 6.60, 6.75, 8.10}, // d = 70
                new double[] {1.10, 1.30, 1.61, 1.85, 2.10, 2.55, 3.20, 4.30, 5.00, 5.60, 6.25, 6.90, 7.85, 8.85}, // d = 80

            };
            protected override double[] GlubSpis { get; set; } = new double[] { 10, 20, 30, 40, 50, 75, 100, 125, 150, 175, 200, 225, 250, 300 };
            protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
            public RazvMedР6М57(double diam, double glub)
            {
                Diam = diam;
                Glub = glub;
            }
        }
    }
    public class RazvModelFactory
    {
        public static RazvModel Create(string mat, string matinstr, double diam, double glub, int Kval)
        {
            if (mat == "Чугун" && matinstr == "Р6М5" && Kval == 8)
                return new RazvChugР6М58(diam, glub);
            else if (mat == "Чугун" && matinstr == "Р6М5" && Kval == 7)
                return new RazvChugР6М57(diam, glub);
            else if (mat == "Чугун" && matinstr == "BK6" && Kval == 8)
                return new RazvChugBK68(diam, glub);
            else if (mat == "Чугун" && matinstr == "BK6" && Kval == 7)
                return new RazvChugBK67(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "Р6М5" && Kval == 8)
                return new RazvKonstrР6М58(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "Р6М5" && Kval == 7)
                return new RazvKonstrР6М57(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "T15K6" && Kval == 8)
                return new RazvKonstrT15K68(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "T15K6" && Kval == 7)
                return new RazvKonstrT15K67(diam, glub);
            else if (mat == "Сталь коррозионностойкая" && matinstr == "Р6М5" && Kval == 8)
                return new RazvKorrozР6М58(diam, glub);
            else if (mat == "Сталь коррозионностойкая" && matinstr == "Р6М5" && Kval == 7)
                return new RazvKorrozР6М57(diam, glub);
            else if (mat == "Алюминиевые сплавы" && matinstr == "Р6М5" && Kval == 8)
                return new RazvAllumР6М58(diam, glub);
            else if (mat == "Алюминиевые сплавы" && matinstr == "Р6М5" && Kval == 7)
                return new RazvAllumР6М57(diam, glub);
            else if (mat == "Медные сплавы" && matinstr == "Р6М5" && Kval == 8)
                return new RazvMedР6М58(diam, glub);
            else if (mat == "Медные сплавы" && matinstr == "Р6М5" && Kval == 7)
                return new RazvMedР6М57(diam, glub);
            else
                throw new ArgumentException("Неподдерживаемая комбинация");
        }
    }
}
