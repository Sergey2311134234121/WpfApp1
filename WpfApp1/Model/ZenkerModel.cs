using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static WpfApp1.Model.OperModelBase;

namespace WpfApp1.Model
{
    public abstract class ZenkerModel : OperModelBase
    {
        protected override double[] GlubSpis { get; set; } = new double[] {10, 15, 20, 25, 30, 40, 50, 60, 80, 100, 125, 150, 175, 200, 225, 250, 300 };
    }
    public class ZenkerChugР6М512 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] {0.14, 0.15, 0.17, 0.19, 0.2, 0.22, 0.27, 0.29, 0.41, 0.49, 0.61, 0.71, 0.00, 0.00, 0.00, 0.00, 0.00},
            new double[] {0.17, 0.19, 0.2, 0.21, 0.22, 0.25, 0.27, 0.28, 0.46, 0.55, 0.73, 0.84, 0.96, 1.07, 0.00, 0.00, 0.00},
            new double[] {0.21, 0.22, 0.24, 0.25, 0.27, 0.31, 0.34, 0.36, 0.48, 0.66, 0.81, 0.93, 1.05, 1.18, 1.3, 1.42, 0.00},
            new double[] {0.25, 0.27, 0.28, 0.31, 0.32, 0.35, 0.38, 0.41, 0.48, 0.71, 0.78, 0.9, 1.09, 1.21, 1.34, 1.42, 1.58},
            new double[] {0.29, 0.32, 0.33, 0.35, 0.37, 0.41, 0.45, 0.55, 0.62, 0.71, 0.93, 1.17, 1.31, 1.44, 1.74, 1.9, 2.06},
            new double[] {0.35, 0.37, 0.39, 0.41, 0.44, 0.49, 0.53, 0.64, 0.74, 0.84, 0.95, 1.07, 1.58, 1.75, 1.75, 2.09, 2.27},
            new double[] {0.41, 0.44, 0.47, 0.49, 0.51, 0.57, 0.61, 0.7, 0.8, 0.89, 1.01, 1.13, 1.26, 1.83, 2.01, 2.18, 2.35},
            new double[] {0.5, 0.53, 0.57, 0.59, 0.62, 0.69, 0.75, 0.84, 0.97, 1.09, 1.24, 1.4, 1.55, 1.7, 2.53, 2.75, 2.96},
            new double[] {0.56, 0.59, 0.62, 0.65, 0.69, 0.76, 0.83, 0.93, 1.06, 1.2, 1.35, 1.53, 1.69, 1.85, 2.73, 2.91, 3.28}
        };
        protected override double[] DiamSpis { get; set; } = new double[] {15, 20, 25, 30, 40, 50, 60, 70, 80 };        
        public ZenkerChugР6М512(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerChugР6М511 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {            
            new double[] {0.21, 0.23, 0.24, 0.26, 0.28, 0.33, 0.36, 0.39, 0.62, 0.73, 0.98, 1.13, 0.00, 0.00, 0.00, 0.00, 0.00},
            new double[] {0.23, 0.25, 0.27, 0.29, 0.32, 0.36, 0.40, 0.44, 0.57, 0.81, 0.98, 1.13, 1.29, 1.45, 0.00, 0.00, 0.00},           
            new double[] {0.28, 0.31, 0.33, 0.35, 0.37, 0.41, 0.46, 0.50, 0.59, 0.88, 1.00, 1.16, 1.48, 1.66, 1.83, 2.01, 0.00},           
            new double[] {0.21, 0.24, 0.26, 0.28, 0.31, 0.36, 0.40, 0.46, 0.56, 0.64, 0.97, 1.14, 1.31, 1.47, 1.83, 2.03, 2.21},
            new double[] {0.34, 0.36, 0.39, 0.41, 0.45, 0.50, 0.56, 0.66, 0.77, 0.88, 1.20, 1.50, 1.70, 1.89, 2.34, 2.56, 2.78},
            new double[] {0.39, 0.41, 0.45, 0.48, 0.51, 0.57, 0.63, 0.75, 0.87, 0.99, 1.30, 1.74, 1.96, 2.18, 2.48, 2.62, 2.83},
            new double[] {0.50, 0.53, 0.57, 0.60, 0.64, 0.71, 0.77, 0.88, 1.01, 1.16, 1.35, 1.49, 1.67, 2.40, 2.73, 2.98, 3.22},
            new double[] {0.58, 0.62, 0.66, 0.70, 0.70, 0.82, 0.90, 1.10, 1.18, 1.33, 1.53, 1.72, 1.92, 2.73, 3.10, 3.43, 3.72},
            new double[] {0.68, 0.72, 0.76, 0.81, 0.85, 0.94, 1.02, 1.16, 1.33, 1.50, 1.72, 1.94, 2.17, 2.39, 2.39, 3.49, 4.39}
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public ZenkerChugР6М511(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerChugBK612 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[]{0.14, 0.15, 0.16, 0.16, 0.17, 0.19, 0.20, 0.21, 0.27, 0.31, 0.38, 0.43, 0.00, 0.00, 0.00, 0.00, 0.00}, 
            new double[]{0.15, 0.16, 0.17, 0.18, 0.19, 0.20, 0.22, 0.24, 0.29, 0.36, 0.44, 0.49, 0.60, 0.66, 0.00, 0.00, 0.00},
            new double[]{0.21, 0.22, 0.22, 0.23, 0.24, 0.25, 0.27, 0.28, 0.32, 0.40, 0.46, 0.51, 0.62, 0.68, 0.74, 0.87, 0.00}, 
            new double[]{0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.29, 0.29, 0.33, 0.36, 0.48, 0.55, 0.64, 0.69, 0.85, 0.93, 1.01},  
            new double[]{0.23, 0.24, 0.25, 0.26, 0.27, 0.29, 0.32, 0.39, 0.44, 0.48, 0.61, 0.73, 0.81, 0.88, 0.96, 1.13, 1.22},
            new double[]{0.25, 0.26, 0.27, 0.29, 0.31, 0.33, 0.35, 0.43, 0.48, 0.52, 0.63, 0.75, 0.92, 1.00, 1.09, 1.18, 1.26},  
            new double[]{0.34, 0.35, 0.37, 0.38, 0.40, 0.44, 0.46, 0.52, 0.59, 0.65, 0.72, 0.80, 0.87, 1.24, 1.35, 1.46, 1.57},
            new double[]{0.39, 0.41, 0.43, 0.45, 0.47, 0.51, 0.55, 0.62, 0.70, 0.77, 0.86, 0.96, 1.06, 1.26, 1.65, 1.80, 1.93},  
            new double[]{0.39, 0.41, 0.43, 0.45, 0.47, 0.49, 0.52, 0.59, 0.66, 0.79, 0.81, 0.89, 0.98, 1.07, 1.16, 1.49, 1.84}   
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public ZenkerChugBK612(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerChugBK611 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
           new double[] {0.15, 0.16, 0.17, 0.17, 0.19, 0.20, 0.22, 0.28, 0.33, 0.49, 0.56, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00},
           new double[] {0.16, 0.17, 0.19, 0.20, 0.21, 0.23, 0.24, 0.25, 0.32, 0.38, 0.47, 0.53, 0.68, 0.75, 0.00, 0.00, 0.00},
           new double[] {0.23, 0.24, 0.25, 0.26, 0.27, 0.29, 0.31, 0.33, 0.37, 0.48, 0.52, 0.59, 0.65, 0.72, 0.80, 1.05, 0.00},
           new double[] {0.23, 0.24, 0.25, 0.26, 0.28, 0.30, 0.32, 0.36, 0.41, 0.49, 0.55, 0.68, 0.75, 0.82, 0.90, 1.02, 1.08},
           new double[] {0.24, 0.25, 0.26, 0.27, 0.29, 0.32, 0.34, 0.41, 0.47, 0.51, 0.72, 0.87, 0.96, 1.06, 1.16, 1.41, 1.52},
           new double[] {0.27, 0.29, 0.31, 0.33, 0.34, 0.37, 0.40, 0.49, 0.55, 0.61, 0.68, 0.75, 1.09, 1.19, 1.30, 1.41, 1.68},
           new double[] {0.37, 0.39, 0.41, 0.43, 0.45, 0.49, 0.52, 0.60, 0.68, 0.75, 0.84, 0.94, 1.04, 1.48, 1.61, 1.75, 1.89},
           new double[] {0.43, 0.45, 0.47, 0.49, 0.51, 0.56, 0.61, 0.69, 0.77, 0.87, 0.97, 1.09, 1.20, 1.32, 1.90, 2.06, 2.22},
           new double[] {0.47, 0.49, 0.51, 0.55, 0.57, 0.61, 0.66, 0.74, 0.85, 0.95, 1.06, 1.18, 1.31, 1.43, 1.96, 2.09, 2.50}
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 40, 50, 60, 70, 80 };
        public ZenkerChugBK611(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerKonstrР6М512 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.16, 0.17, 0.20, 0.22, 0.24, 0.27, 0.36, 0.40, 0.50, 0.60, 0.74, 0.86, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d= 15
            new double[] { 0.22, 0.24, 0.26, 0.28, 0.31, 0.35, 0.39, 0.43, 0.56, 0.65, 0.80, 0.92, 1.05, 1.17, 0.00, 0.00, 0.00 }, // d= 20
            new double[] { 0.24, 0.26, 0.28, 0.32, 0.34, 0.39, 0.44, 0.48, 0.68, 0.81, 0.98, 1.13, 1.28, 1.43, 1.58, 1.73, 0.00 }, // d= 25
            new double[] { 0.23, 0.26, 0.29, 0.33, 0.37, 0.44, 0.50, 0.56, 0.70, 0.84, 1.09, 1.22, 1.43, 1.60, 1.77, 1.93, 2.10 }, // d= 30
            new double[] { 0.32, 0.34, 0.37, 0.39, 0.43, 0.48, 0.53, 0.59, 0.72, 0.96, 1.18, 1.26, 1.46, 1.65, 1.83, 2.03, 2.21 }, // d= 35
            new double[] { 0.38, 0.43, 0.46, 0.49, 0.52, 0.60, 0.66, 0.78, 0.93, 1.07, 1.48, 1.70, 1.92, 2.14, 2.35, 2.57, 2.79 }, // d= 40
            new double[] { 0.46, 0.50, 0.53, 0.58, 0.62, 0.70, 0.77, 0.92, 1.07, 1.23, 1.42, 1.62, 2.21, 2.46, 2.71, 2.95, 3.20 }, // d= 50
            new double[] { 0.61, 0.66, 0.71, 0.76, 0.81, 0.90, 1.00, 1.13, 1.33, 1.52, 1.75, 1.99, 2.23, 3.07, 3.39, 3.70, 4.00 }, // d= 60
            new double[] { 0.72, 0.77, 0.83, 0.88, 0.94, 1.05, 1.17, 1.31, 1.53, 1.74, 2.01, 2.28, 2.55, 2.82, 3.87, 4.22, 4.57 }, // d= 70
            new double[] { 0.85, 0.92, 0.97, 1.04, 1.10, 1.22, 1.34, 1.50, 1.74, 1.99, 2.29, 2.61, 2.91, 3.22, 3.53, 4.77, 5.17 }  // d= 80

        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerKonstrР6М512(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerKonstrР6М511 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.16, 0.17, 0.20, 0.22, 0.24, 0.27, 0.34, 0.37, 0.46, 0.55, 0.68, 0.78, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d= 15
            new double[] { 0.20, 0.22, 0.24, 0.28, 0.32, 0.34, 0.40, 0.43, 0.58, 0.68, 0.83, 0.95, 1.08, 1.21, 0.00, 0.00, 0.00 }, // d= 20
            new double[] { 0.24, 0.26, 0.28, 0.31, 0.34, 0.38, 0.44, 0.47, 0.69, 0.82, 0.99, 1.14, 1.30, 1.45, 1.60, 1.77, 0.00 }, // d= 25
            new double[] { 0.23, 0.27, 0.31, 0.34, 0.37, 0.44, 0.51, 0.58, 0.72, 0.85, 1.20, 1.42, 1.63, 1.83, 2.03, 2.21, 2.41 }, // d= 30
            new double[] { 0.34, 0.37, 0.40, 0.43, 0.46, 0.52, 0.59, 0.64, 0.77, 1.08, 1.24, 1.46, 1.68, 1.91, 2.13, 2.35, 2.57 }, // d= 35
            new double[] { 0.41, 0.45, 0.49, 0.52, 0.57, 0.64, 0.72, 0.85, 1.00, 1.16, 1.46, 1.68, 1.89, 2.10, 2.31, 2.53, 2.74 }, // d= 40
            new double[] { 0.48, 0.52, 0.57, 0.61, 0.65, 0.73, 0.82, 0.96, 1.13, 1.30, 1.50, 1.71, 2.41, 2.68, 2.95, 3.23, 3.50 }, // d= 50
            new double[] { 0.61, 0.66, 0.71, 0.76, 0.81, 0.90, 1.00, 1.13, 1.33, 1.52, 1.75, 1.99, 2.23, 3.04, 3.35, 3.64, 3.95 }, // d= 60
            new double[] { 0.77, 0.84, 0.89, 0.96, 1.01, 1.14, 1.26, 1.42, 1.66, 1.90, 2.19, 2.50, 2.80, 3.10, 4.20, 4.58, 4.95 }, // d= 70
            new double[] { 0.86, 0.93, 0.99, 1.06, 1.11, 1.24, 1.36, 1.53, 1.78, 2.03, 2.33, 2.65, 2.96, 3.28, 3.60, 5.10, 5.53 }  // d= 80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerKonstrР6М511(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerKonstrT15K612 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
    new double[] { 0.13, 0.14, 0.14, 0.15, 0.15, 0.17, 0.21, 0.21, 0.25, 0.31, 0.40, 0.46, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d = 15
    new double[] { 0.15, 0.16, 0.17, 0.17, 0.19, 0.21, 0.22, 0.23, 0.32, 0.36, 0.46, 0.52, 0.59, 0.64, 0.00, 0.00, 0.00 }, // d = 20
    new double[] { 0.15, 0.16, 0.17, 0.19, 0.19, 0.21, 0.22, 0.22, 0.29, 0.38, 0.47, 0.53, 0.65, 0.72, 0.80, 0.86, 0.00 }, // d = 25
    new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.50, 0.59, 0.66, 0.75, 0.90, 1.00, 1.09 }, // d = 30
    new double[] { 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.28, 0.29, 0.34, 0.49, 0.52, 0.60, 0.68, 0.82, 0.92, 1.07, 1.16 }, // d = 35
    new double[] { 0.23, 0.24, 0.25, 0.26, 0.27, 0.29, 0.32, 0.39, 0.44, 0.48, 0.61, 0.70, 0.81, 0.88, 1.05, 1.16, 1.24 }, // d = 40
    new double[] { 0.26, 0.28, 0.29, 0.31, 0.33, 0.35, 0.38, 0.46, 0.51, 0.57, 0.63, 0.73, 0.99, 1.09, 1.19, 1.29, 1.38 }, // d = 50
    new double[] { 0.35, 0.37, 0.38, 0.40, 0.41, 0.45, 0.48, 0.55, 0.62, 0.69, 0.75, 0.84, 0.93, 1.15, 1.47, 1.59, 1.71 }, // d = 60
    new double[] { 0.39, 0.41, 0.43, 0.45, 0.47, 0.51, 0.55, 0.62, 0.70, 0.77, 0.86, 0.96, 1.06, 1.26, 1.53, 1.80, 1.93 }, // d = 70
    new double[] { 0.46, 0.48, 0.51, 0.53, 0.56, 0.61, 0.65, 0.74, 0.83, 0.93, 1.05, 1.17, 1.29, 1.41, 1.66, 1.99, 2.39 }  // d = 80

        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerKonstrT15K612(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerKonstrT15K611 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.13, 0.14, 0.14, 0.15, 0.16, 0.17, 0.21, 0.21, 0.22, 0.24, 0.31, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d=15
            new double[] { 0.14, 0.14, 0.15, 0.16, 0.17, 0.20, 0.21, 0.22, 0.26, 0.31, 0.36, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00 }, // d=20
            new double[] { 0.14, 0.15, 0.16, 0.16, 0.17, 0.20, 0.22, 0.23, 0.27, 0.32, 0.37, 0.43, 0.49, 0.53, 0.52, 0.62, 0.00 }, // d=25
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.44, 0.50, 0.51, 0.48, 0.57, 0.68, 0.73 }, // d=30
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.40, 0.44, 0.50, 0.56, 0.62, 0.62, 0.68, 0.73 }, // d=35
            new double[] { 0.19, 0.20, 0.21, 0.23, 0.24, 0.26, 0.28, 0.36, 0.41, 0.46, 0.51, 0.66, 0.74, 0.82, 0.86, 0.82, 0.87 }, // d=40
            new double[] { 0.19, 0.21, 0.22, 0.23, 0.24, 0.27, 0.29, 0.38, 0.44, 0.49, 0.55, 0.62, 0.81, 0.88, 0.97, 1.06, 1.14 }, // d=50
            new double[] { 0.24, 0.26, 0.27, 0.29, 0.32, 0.35, 0.38, 0.45, 0.51, 0.59, 0.66, 0.75, 0.84, 1.00, 1.09, 1.19, 1.29 }, // d=60
            new double[] { 0.25, 0.27, 0.29, 0.32, 0.34, 0.38, 0.43, 0.50, 0.59, 0.68, 0.78, 0.89, 1.00, 1.11, 1.32, 1.44, 1.56 }, // d=70
            new double[] { 0.26, 0.28, 0.31, 0.34, 0.36, 0.41, 0.46, 0.55, 0.64, 0.75, 0.86, 0.99, 1.11, 1.24, 1.37, 1.49, 1.83 }, // d=80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerKonstrT15K611(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerKorozionnoР6М512 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.13, 0.14, 0.14, 0.15, 0.16, 0.17, 0.21, 0.21, 0.22, 0.24, 0.31, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d=15
            new double[] { 0.14, 0.14, 0.15, 0.16, 0.17, 0.20, 0.21, 0.22, 0.26, 0.31, 0.36, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00 }, // d=20
            new double[] { 0.14, 0.15, 0.16, 0.16, 0.17, 0.20, 0.22, 0.23, 0.27, 0.32, 0.37, 0.43, 0.49, 0.53, 0.52, 0.62, 0.00 }, // d=25
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.44, 0.50, 0.51, 0.48, 0.57, 0.68, 0.73 }, // d=30
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.40, 0.44, 0.50, 0.56, 0.62, 0.62, 0.68, 0.73 }, // d=35
            new double[] { 0.19, 0.20, 0.21, 0.23, 0.24, 0.26, 0.28, 0.36, 0.41, 0.46, 0.51, 0.66, 0.74, 0.82, 0.86, 0.82, 0.87 }, // d=40
            new double[] { 0.19, 0.21, 0.22, 0.23, 0.24, 0.27, 0.29, 0.38, 0.44, 0.49, 0.55, 0.62, 0.81, 0.88, 0.97, 1.06, 1.14 }, // d=50
            new double[] { 0.24, 0.26, 0.27, 0.29, 0.32, 0.35, 0.38, 0.45, 0.51, 0.59, 0.66, 0.75, 0.84, 1.00, 1.09, 1.19, 1.29 }, // d=60
            new double[] { 0.25, 0.27, 0.29, 0.32, 0.34, 0.38, 0.43, 0.50, 0.59, 0.68, 0.78, 0.89, 1.00, 1.11, 1.32, 1.44, 1.56 }, // d=70
            new double[] { 0.26, 0.28, 0.31, 0.34, 0.36, 0.41, 0.46, 0.55, 0.64, 0.75, 0.86, 0.99, 1.11, 1.24, 1.37, 1.49, 1.83 }, // d=80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerKorozionnoР6М512(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerKorozionnoР6М511 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.13, 0.14, 0.14, 0.15, 0.16, 0.17, 0.21, 0.21, 0.22, 0.24, 0.31, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d=15
            new double[] { 0.14, 0.14, 0.15, 0.16, 0.17, 0.20, 0.21, 0.22, 0.26, 0.31, 0.36, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00 }, // d=20
            new double[] { 0.14, 0.15, 0.16, 0.16, 0.17, 0.20, 0.22, 0.23, 0.27, 0.32, 0.37, 0.43, 0.49, 0.53, 0.52, 0.62, 0.00 }, // d=25
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.44, 0.50, 0.51, 0.48, 0.57, 0.68, 0.73 }, // d=30
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.40, 0.44, 0.50, 0.56, 0.62, 0.62, 0.68, 0.73 }, // d=35
            new double[] { 0.19, 0.20, 0.21, 0.23, 0.24, 0.26, 0.28, 0.36, 0.41, 0.46, 0.51, 0.66, 0.74, 0.82, 0.86, 0.82, 0.87 }, // d=40
            new double[] { 0.19, 0.21, 0.22, 0.23, 0.24, 0.27, 0.29, 0.38, 0.44, 0.49, 0.55, 0.62, 0.81, 0.88, 0.97, 1.06, 1.14 }, // d=50
            new double[] { 0.24, 0.26, 0.27, 0.29, 0.32, 0.35, 0.38, 0.45, 0.51, 0.59, 0.66, 0.75, 0.84, 1.00, 1.09, 1.19, 1.29 }, // d=60
            new double[] { 0.25, 0.27, 0.29, 0.32, 0.34, 0.38, 0.43, 0.50, 0.59, 0.68, 0.78, 0.89, 1.00, 1.11, 1.32, 1.44, 1.56 }, // d=70
            new double[] { 0.26, 0.28, 0.31, 0.34, 0.36, 0.41, 0.46, 0.55, 0.64, 0.75, 0.86, 0.99, 1.11, 1.24, 1.37, 1.49, 1.83 }, // d=80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerKorozionnoР6М511(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerAllumР6М512 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.13, 0.14, 0.14, 0.15, 0.16, 0.17, 0.21, 0.21, 0.22, 0.24, 0.31, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d=15
            new double[] { 0.14, 0.14, 0.15, 0.16, 0.17, 0.20, 0.21, 0.22, 0.26, 0.31, 0.36, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00 }, // d=20
            new double[] { 0.14, 0.15, 0.16, 0.16, 0.17, 0.20, 0.22, 0.23, 0.27, 0.32, 0.37, 0.43, 0.49, 0.53, 0.52, 0.62, 0.00 }, // d=25
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.44, 0.50, 0.51, 0.48, 0.57, 0.68, 0.73 }, // d=30
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.40, 0.44, 0.50, 0.56, 0.62, 0.62, 0.68, 0.73 }, // d=35
            new double[] { 0.19, 0.20, 0.21, 0.23, 0.24, 0.26, 0.28, 0.36, 0.41, 0.46, 0.51, 0.66, 0.74, 0.82, 0.86, 0.82, 0.87 }, // d=40
            new double[] { 0.19, 0.21, 0.22, 0.23, 0.24, 0.27, 0.29, 0.38, 0.44, 0.49, 0.55, 0.62, 0.81, 0.88, 0.97, 1.06, 1.14 }, // d=50
            new double[] { 0.24, 0.26, 0.27, 0.29, 0.32, 0.35, 0.38, 0.45, 0.51, 0.59, 0.66, 0.75, 0.84, 1.00, 1.09, 1.19, 1.29 }, // d=60
            new double[] { 0.25, 0.27, 0.29, 0.32, 0.34, 0.38, 0.43, 0.50, 0.59, 0.68, 0.78, 0.89, 1.00, 1.11, 1.32, 1.44, 1.56 }, // d=70
            new double[] { 0.26, 0.28, 0.31, 0.34, 0.36, 0.41, 0.46, 0.55, 0.64, 0.75, 0.86, 0.99, 1.11, 1.24, 1.37, 1.49, 1.83 }, // d=80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerAllumР6М512(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerAllumР6М511 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.13, 0.14, 0.14, 0.15, 0.16, 0.17, 0.21, 0.21, 0.22, 0.24, 0.31, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d=15
            new double[] { 0.14, 0.14, 0.15, 0.16, 0.17, 0.20, 0.21, 0.22, 0.26, 0.31, 0.36, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00 }, // d=20
            new double[] { 0.14, 0.15, 0.16, 0.16, 0.17, 0.20, 0.22, 0.23, 0.27, 0.32, 0.37, 0.43, 0.49, 0.53, 0.52, 0.62, 0.00 }, // d=25
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.44, 0.50, 0.51, 0.48, 0.57, 0.68, 0.73 }, // d=30
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.40, 0.44, 0.50, 0.56, 0.62, 0.62, 0.68, 0.73 }, // d=35
            new double[] { 0.19, 0.20, 0.21, 0.23, 0.24, 0.26, 0.28, 0.36, 0.41, 0.46, 0.51, 0.66, 0.74, 0.82, 0.86, 0.82, 0.87 }, // d=40
            new double[] { 0.19, 0.21, 0.22, 0.23, 0.24, 0.27, 0.29, 0.38, 0.44, 0.49, 0.55, 0.62, 0.81, 0.88, 0.97, 1.06, 1.14 }, // d=50
            new double[] { 0.24, 0.26, 0.27, 0.29, 0.32, 0.35, 0.38, 0.45, 0.51, 0.59, 0.66, 0.75, 0.84, 1.00, 1.09, 1.19, 1.29 }, // d=60
            new double[] { 0.25, 0.27, 0.29, 0.32, 0.34, 0.38, 0.43, 0.50, 0.59, 0.68, 0.78, 0.89, 1.00, 1.11, 1.32, 1.44, 1.56 }, // d=70
            new double[] { 0.26, 0.28, 0.31, 0.34, 0.36, 0.41, 0.46, 0.55, 0.64, 0.75, 0.86, 0.99, 1.11, 1.24, 1.37, 1.49, 1.83 }, // d=80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerAllumР6М511(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerMedР6М512 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.13, 0.14, 0.14, 0.15, 0.16, 0.17, 0.21, 0.21, 0.22, 0.24, 0.31, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d=15
            new double[] { 0.14, 0.14, 0.15, 0.16, 0.17, 0.20, 0.21, 0.22, 0.26, 0.31, 0.36, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00 }, // d=20
            new double[] { 0.14, 0.15, 0.16, 0.16, 0.17, 0.20, 0.22, 0.23, 0.27, 0.32, 0.37, 0.43, 0.49, 0.53, 0.52, 0.62, 0.00 }, // d=25
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.44, 0.50, 0.51, 0.48, 0.57, 0.68, 0.73 }, // d=30
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.40, 0.44, 0.50, 0.56, 0.62, 0.62, 0.68, 0.73 }, // d=35
            new double[] { 0.19, 0.20, 0.21, 0.23, 0.24, 0.26, 0.28, 0.36, 0.41, 0.46, 0.51, 0.66, 0.74, 0.82, 0.86, 0.82, 0.87 }, // d=40
            new double[] { 0.19, 0.21, 0.22, 0.23, 0.24, 0.27, 0.29, 0.38, 0.44, 0.49, 0.55, 0.62, 0.81, 0.88, 0.97, 1.06, 1.14 }, // d=50
            new double[] { 0.24, 0.26, 0.27, 0.29, 0.32, 0.35, 0.38, 0.45, 0.51, 0.59, 0.66, 0.75, 0.84, 1.00, 1.09, 1.19, 1.29 }, // d=60
            new double[] { 0.25, 0.27, 0.29, 0.32, 0.34, 0.38, 0.43, 0.50, 0.59, 0.68, 0.78, 0.89, 1.00, 1.11, 1.32, 1.44, 1.56 }, // d=70
            new double[] { 0.26, 0.28, 0.31, 0.34, 0.36, 0.41, 0.46, 0.55, 0.64, 0.75, 0.86, 0.99, 1.11, 1.24, 1.37, 1.49, 1.83 }, // d=80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerMedР6М512(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerMedР6М511 : ZenkerModel
    {
        protected override double[][] VremOper { get; set; } = new double[][]
        {
            new double[] { 0.13, 0.14, 0.14, 0.15, 0.16, 0.17, 0.21, 0.21, 0.22, 0.24, 0.31, 0.34, 0.00, 0.00, 0.00, 0.00, 0.00 }, // d=15
            new double[] { 0.14, 0.14, 0.15, 0.16, 0.17, 0.20, 0.21, 0.22, 0.26, 0.31, 0.36, 0.40, 0.44, 0.48, 0.00, 0.00, 0.00 }, // d=20
            new double[] { 0.14, 0.15, 0.16, 0.16, 0.17, 0.20, 0.22, 0.23, 0.27, 0.32, 0.37, 0.43, 0.49, 0.53, 0.52, 0.62, 0.00 }, // d=25
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.38, 0.44, 0.50, 0.51, 0.48, 0.57, 0.68, 0.73 }, // d=30
            new double[] { 0.19, 0.20, 0.21, 0.22, 0.23, 0.25, 0.27, 0.29, 0.34, 0.40, 0.44, 0.50, 0.56, 0.62, 0.62, 0.68, 0.73 }, // d=35
            new double[] { 0.19, 0.20, 0.21, 0.23, 0.24, 0.26, 0.28, 0.36, 0.41, 0.46, 0.51, 0.66, 0.74, 0.82, 0.86, 0.82, 0.87 }, // d=40
            new double[] { 0.19, 0.21, 0.22, 0.23, 0.24, 0.27, 0.29, 0.38, 0.44, 0.49, 0.55, 0.62, 0.81, 0.88, 0.97, 1.06, 1.14 }, // d=50
            new double[] { 0.24, 0.26, 0.27, 0.29, 0.32, 0.35, 0.38, 0.45, 0.51, 0.59, 0.66, 0.75, 0.84, 1.00, 1.09, 1.19, 1.29 }, // d=60
            new double[] { 0.25, 0.27, 0.29, 0.32, 0.34, 0.38, 0.43, 0.50, 0.59, 0.68, 0.78, 0.89, 1.00, 1.11, 1.32, 1.44, 1.56 }, // d=70
            new double[] { 0.26, 0.28, 0.31, 0.34, 0.36, 0.41, 0.46, 0.55, 0.64, 0.75, 0.86, 0.99, 1.11, 1.24, 1.37, 1.49, 1.83 }, // d=80
        };
        protected override double[] DiamSpis { get; set; } = new double[] { 15, 20, 25, 30, 35, 40, 50, 60, 70, 80 };
        public ZenkerMedР6М511(double diam, double glub)
        {
            Diam = diam;
            Glub = glub;
        }
    }
    public class ZenkerModelFactory
    {
        public static ZenkerModel Create(string mat, string matinstr, double diam, double glub, int Kval)
        {
            if (mat == "Чугун" && matinstr == "Р6М5" && Kval == 12)
                return new ZenkerChugР6М512(diam, glub);
            else if (mat == "Чугун" && matinstr == "Р6М5" && Kval == 11)
                return new ZenkerChugР6М511(diam, glub);
            else if (mat == "Чугун" && matinstr == "BK6" && Kval == 12)
                return new ZenkerChugBK612(diam, glub);
            else if (mat == "Чугун" && matinstr == "BK6" && Kval == 11)
                return new ZenkerChugBK611(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "Р6М5" && Kval == 12)
                return new ZenkerKonstrР6М512(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "Р6М5" && Kval == 11)
                return new ZenkerKonstrР6М511(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "T15K6" && Kval == 12)
                return new ZenkerKonstrT15K612(diam, glub);
            else if (mat == "Сталь углеродистая" && matinstr == "T15K6" && Kval == 11)
                return new ZenkerKonstrT15K611(diam, glub);
            else if (mat == "Сталь коррозионностойкая" && matinstr == "Р6М5" && Kval == 12)
                return new ZenkerKorozionnoР6М512(diam, glub);
            else if (mat == "Сталь коррозионностойкая" && matinstr == "Р6М5" && Kval == 11)
                return new ZenkerKorozionnoР6М511(diam, glub);
            else if (mat == "Алюминиевые сплавы" && matinstr == "Р6М5" && Kval == 12)
                return new ZenkerAllumР6М512(diam, glub);
            else if (mat == "Алюминиевые сплавы" && matinstr == "Р6М5" && Kval == 11)
                return new ZenkerAllumР6М511(diam, glub);
            else if (mat == "Медные сплавы" && matinstr == "Р6М5" && Kval == 12)
                return new ZenkerMedР6М512(diam, glub);
            else if (mat == "Медные сплавы" && matinstr == "Р6М5" && Kval == 11)
                return new ZenkerMedР6М511(diam, glub);
            else
                throw new ArgumentException("Неподдерживаемая комбинация");
        }
    }
}
